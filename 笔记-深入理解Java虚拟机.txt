一、java虚拟机的参数设汇总
1.java堆的最大值 -Xmx
2.java堆的最小值 -Xms
3.在堆内存溢出时内存堆转储快照，用于分析：-XX:+HeapDumpOnOutOfMemoryError
4.栈容量：由-Xss参数设置
5.方法区容量： -XX:PermSize和-XX:MaxPermSize

二、概述
1.线程运行时的数据区包括:方法区、堆、虚拟机栈、本地方法栈、程序计数器
	1.1程序计数器：
		1.线程私有
		2.当前线程要执行的字节码的行号。
		3.字节码解释器是改变计数器的值来控制线程执行顺序
		4.当执行native方法时，该值为空undefined
		5.唯一没有没有outofmemeryerror的区域
	1.2java虚拟机栈
		1.线程私有，生命周期与线程相同
		2.虚拟机栈描述的是内存模型，每个方法执行会创建栈帧。
	 *3.栈帧是一种数据结构，包括：局部变量表、操作栈、动态链接、方法出口等信息。
		4.每个方法的调用就对应着一个栈帧在虚拟机的入栈到出栈的过程。
	 *5.局部变量表存放着编译期可知的基本数据类型、对象引用和returnAddress(指向了一条字节码指令的地址)
			内存空间在编译期确定
		6.规范有两种异常状况：1.StackOverflowError和outofmemeryerror
	1.3本地方法栈
		1.线程私有
		2.与虚拟机栈相似
		3.为虚拟机执行本地方法服务
		4.规范有两种异常状况：1.StackOverflowError和outofmemeryerror
	1.4java堆
		1.线程共享内存
		2.在虚拟机启动时创建，用于存放对象实例以及数组
		3.随着JIT编译器的发展，不一定在堆分配内存。
		4.按不同维度可以分为新生代、老年代和Eden空间、From Survivor空间、To Survivor空间
		5.进一步的划分是为了更好的创建对象和回收内存
		6.outofmemeryerror异常
		7.物理上不连续的内存空间。
	1.5方法区
		1.线程共享的内存区域
		2.存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据
		3.规范把方法区描述为堆的一个逻辑部分，但是它有一个别名叫Non-Heap
		4.别名永久代，因为gc分代收集也包括方法区，hotspot的做法。
		5.在此区域的垃圾收集比较少出现，主要是针对常量池的回收和对类型的卸载
		6.outofmemeryerror异常
	1.6运行时常量池
		1.是方法区的一部分。
		2.Class文件包括：类的版本、字段、方法、接口等描述信息、还有常量池，用于存放编译期生成的各种字面量
			和符号引用，将在类加载后存放到方法区的运行时常量池
		3.class文件的符号引用和翻译出来的直接引用也会存储在运行时常量池//todo 概念在第六章
		4.运行时常量池可以在运行期加入。比如String类的intern()方法
		5.outofmemeryerror异常
	1.7直接内存
		1.不是虚拟机运行时数据区的一部分，是因为NIO(New Input/Output)类，引入
			一种基于channel与buffer的I/O方法。直接分配堆外内存，在堆内的DirectByteBuffer对象
			作为这块内存的引用进行操作。
		2.outofmemeryerror异常
2.对象访问
	2.1.Object obj = new Object(); 类信息（对象类型，父类、实现的接口、方法等）存放在方法区的运行时常量池
	obj的reference放在虚拟机栈的局部变量表，对象存放在堆内存
	2.2.主流的访问方式：使用句柄和直接指针
			1.句柄访问方式：需要java堆划分一块句柄池。reference存的是对象的句柄地址，句柄中
				包含了对象实例数据和类型数据的具体地址信息
			2.直接指针访问方式：需要在堆对象中包含到方法区存储的对象类型数据的指针，
				reference直接存储对象地址
			3.不同方式的优劣：
				句柄访问在对象被移动（GC时会移动）无需修改reference的地址
				直接指针访问的优势在于速度快，少一次指针定位时间。 (Hotspot实现方式)
			4.在各类框架与语言中两种方式都使用。
3.OutOfMemoryError异常
	3.1java堆溢出：GC Roots到对象有之间有可达路径。堆内对象过多，但又有引用无法GC
	3.2虚拟机栈和本地方法栈溢出：在多线程时会导致内存溢出
	3.3方法区：CGLIB动态生成的Class加载到方法区可以能导致溢出
	3.3运行时常量池溢出：运行时有过多的常量String的intern
	3.4本机内存溢出：在操作I/O流的时候
